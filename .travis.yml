dist: xenial
language: minimal

services:
  - docker
git:
  submodules: false
env:
  global:
    - MAKEOPTS="-j4"
    - CACHE_DIR=${HOME}/persist
    - RELEASE_IMAGE=$(ci-scripts/get-release-img.sh)
cache:
  directories:
    - $CACHE_DIR

stages:
  - name: Build
  - name: Test

jobs:
  include:
    - stage: Build
      script:
        - docker pull ${RELEASE_IMAGE}
        - docker build --cache-from ${RELEASE_IMAGE} -t ${RELEASE_IMAGE} .
        - echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
        - docker push ${RELEASE_IMAGE}
        - ./ci-scripts/build-all.sh
#
#    - &test
#      stage: Test
#      env:
#        - PORT=stm32
#      script:
#        - docker run -v ${PWD}:${PWD} -w ${PWD} ${RELEASE_IMAGE} ci-scripts/${PORT}.sh
#    - <<: *test
#      env:
#        - PORT=qemu-arm
#    - <<: *test
#      env:
#        - PORT=unix-coverage
#    - <<: *test
#      env:
#        - PORT=unix-standard
#    - <<: *test
#      env:
#        - PORT=unix-nanobox
#    - <<: *test
#      env:
#        - PORT=unix-stackless
#    - <<: *test
#      env:
#        - PORT=windows
#    - <<: *test
#      env:
#        - PORT=esp32
#    - <<: *test
#      env:
#        - PORT=esp8266
#    - <<: *test
#      env:
#        - PORT=nrf
#    - <<: *test
#      env:
#        - PORT=bare-arm
#    - <<: *test
#      env:
#        - PORT=cc3200
#    - <<: *test
#      env:
#        - PORT=samd
#    - <<: *test
#      env:
#        - PORT=teensy
