# MicroPython on ESP32, ESP IDF configuration
# The following options override the esp-idf's sdkconfig defaults

CONFIG_IDF_TARGET="esp32"
CONFIG_IDF_FIRMWARE_CHIP_ID=0x0000

# Application manager - MicroPython doesn't use the application versioning of esp-idf.
CONFIG_APP_EXCLUDE_PROJECT_VER_VAR=y
CONFIG_APP_EXCLUDE_PROJECT_NAME_VAR=y

# Bootloader config - Keep the bootloader quiet.
CONFIG_BOOTLOADER_LOG_LEVEL_WARN=y

# Change default log level to reduce chatter at boot and when turning wifi or BLE on/off.
CONFIG_LOG_DEFAULT_LEVEL_DEBUG=n # enable to see how flash/psram is inited
CONFIG_LOG_DEFAULT_LEVEL_INFO=n # enable to see boot/wifi/ble chatter
CONFIG_LOG_DEFAULT_LEVEL_WARN=y
CONFIG_LOG_DEFAULT_LEVEL_ERROR=n
#CONFIG_LOG_DEFAULT_LEVEL=2 # 1=ERROR, 2=WARN, 3=INFO, 4=DEBUG

# ESP32-specific
CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0=n
CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1=n
CONFIG_ESP32_XTAL_FREQ_AUTO=y

# Power Management
CONFIG_PM_ENABLE=y

# FreeRTOS
CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS=2
CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION=y
CONFIG_FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP=y

# UDP
CONFIG_LWIP_PPP_SUPPORT=y
CONFIG_LWIP_PPP_PAP_SUPPORT=y
CONFIG_LWIP_PPP_CHAP_SUPPORT=y

# SSL
# Use 4kiB output buffer instead of default 16kiB (because IDF heap is tight).
CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN=y

# ULP coprocessor support
CONFIG_ESP32_ULP_COPROC_ENABLED=y

# Ensure cmake uses the right partition map
CONFIG_ESPTOOLPY_FLASHSIZE_4MB=y
CONFIG_PARTITION_TABLE_CUSTOM=y
CONFIG_PARTITION_TABLE_CUSTOM_FILENAME="partitions.csv"
