.. _cpython_diffs:

MicroPython differences from CPython
====================================

The operations listed in this section produce conflicting results in MicroPython when 
compared to standard Python.

**Python 3.5** 

Given below is a list of PEPs (in progress) grouped to their impact to MicroPython.

* Extension to the syntax:

    * `PEP 448 <https://www.python.org/dev/peps/pep-0448/>`_ : additional unpacking generalizations 

* Standard library changes:

    * `PEP 471 <https://www.python.org/dev/peps/pep-0471/>`_ : os.scandir() 

* Miscellaneous changes

    * `PEP 441 <https://www.python.org/dev/peps/pep-0441/>`_ : improved Python zip application support
    
    * `PEP 486 <https://www.python.org/dev/peps/pep-0486/>`_ : make the Python Laucher aware of virtual environments

    * `PEP 484 <https://www.python.org/dev/peps/pep-0484/>`_ : type hints (advisory only)

    * `PEP 488 <https://www.python.org/dev/peps/pep-0488/>`_ : elimination of PYO files (not relevant for uPy)

    * `PEP 489 <https://www.python.org/dev/peps/pep-0489/>`_ : redesigning extension module loading  

Given below is a list of PEPs (completed) grouped to their impact to MicroPython.

* Extension to the syntax:

    * `PEP 465 <https://www.python.org/dev/peps/pep-0465/>`_ : a new matrix multiplication operator 

    * `PEP 492 <https://www.python.org/dev/peps/pep-0492/>`_ : coroutines with async and await syntax

* Extensions and changes to runtime:

    * `PEP 461 <https://www.python.org/dev/peps/pep-0461/>`_ : % formatting for binary strings

    * `PEP 475 <https://www.python.org/dev/peps/pep-0475/>`_ : retyring system calls that fail with EINTR

    * `PEP 479 <https://www.python.org/dev/peps/pep-0479/>`_ : change StopIteration handling inside generators

* Standard library changes:

    * `PEP 485 <https://www.python.org/dev/peps/pep-0485/>`_ : math.isclose(), a function for testing approximate equality

 
**Python 3.6** 

Python 3.6 beta 1 was released on 12 September 2016, and below is the summary
of the new features available (in progress) : 

* New Syntax features: 

    * A global or nonlocal statement must now textually appear before
      he first use of the affected name in the same scope.
      For uPy: requires minor changes to the  compiler.

    * `PEP 498 <https://www.python.org/dev/peps/pep-0498/>`_ : Literal String Formatting for uPy: yet another 
                                                               string formatting option, likely too much bloat
                                                               (or could replace both existing % and str .format)

    * `PEP 525 <https://www.python.org/dev/peps/pep-0525/>`_ : Aynchronous Generators (provisional)
    
    * `PEP 530 <https://www.python.org/dev/peps/pep-0530/>`_ : Aynchoronous Comprehensions

* New Built-in Features:

    * `PEP 487 <https://www.python.org/dev/peps/pep-0487/>`_ : Simpler customisation of class creation

    * `PEP 520 <https://www.python.org/dev/peps/pep-0520/>`_ : Preserving Class Attribute Definition Order

* Standard library changes:

    * `PEP 495 <https://www.python.org/dev/peps/pep-0495/>`_ : Local Time Disambiguation

    * `PEP 506 <https://www.python.org/dev/peps/pep-0506/>`_ : Adding a Secrets Module to the Standard Library

    * `PEP 519 <https://www.python.org/dev/peps/pep-0519/>`_ : Adding a file system protocol 

* Linux/Window Changes:

    * `PEP 524 <https://www.python.org/dev/peps/pep-0524/>`_ : Make os.random() blocking on Linux (During syste startup) 

    * `PEP 528 <https://www.python.org/dev/peps/pep-0528/>`_ :  Change Windows console encoding to UTF-8 (Provisional)

Python 3.6 beta 1 was released on 12 September 2016, and below is the summary
of the new features available (completed) :

* New Syntax Features:

    * `PEP 515 <https://www.python.org/dev/peps/pep-0515/>`_ : Underscores in Numeric Literals
                                                               For uPy: requires minor changes to lexer

    * `PEP 526 <https://www.python.org/dev/peps/pep-0526/>`_ : Syntax for Variable Annotations (Provisional)
                                                               For uPy: requires changes to Parser                                                           


 
.. toctree::
    :maxdepth: 2

