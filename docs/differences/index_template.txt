.. _cpython_diffs:

MicroPython differences from CPython
====================================

Python Language Support
-----------------------

The following Python language features have been implemented in MicroPython, 
per release. Select the release to see more details.

  
The operations listed in this section produce conflicting results in MicroPython when compared to standard Python.
MicroPython implements Python 3.4 and some select features of Python 3.5.

***********
Python 3.5
***********

Below is a list of finalised/accepted PEPs for Python 3.5 grouped into their impact to MicroPython.

   +----------------------------------------------------------------------------------------------------------+---------------+
   | **Extensions to the syntax:**                                                                            | **Status**    |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 448 <https://www.python.org/dev/peps/pep-0448/>`_ | additional unpacking generalizations            | In Progress   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 465 <https://www.python.org/dev/peps/pep-0465/>`_ | a new matrix multiplication operator            | Completed     |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 492 <https://www.python.org/dev/peps/pep-0492/>`_ | coroutines with async and await syntax          | Completed     |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | **Extensions and changes to runtime:**                                                                                   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 461 <https://www.python.org/dev/peps/pep-0461/>`_ | % formatting for binary strings                 | Completed     |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 475 <https://www.python.org/dev/peps/pep-0475/>`_ | retrying system calls that fail with EINTR      | Completed     |    
   +--------------------------------------------------------+-------------------------------------------------+---------------+ 
   | `PEP 479 <https://www.python.org/dev/peps/pep-0479/>`_ | change StopIteration handling inside generators | Completed     |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | **Standard library changes:**                                                                                            |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 471 <https://www.python.org/dev/peps/pep-0471/>`_ | os.scandir()                                    | In Progress   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 485 <https://www.python.org/dev/peps/pep-0485/>`_ | math.isclose(), a function for testing          | Completed     |
   |                                                        | approximate equality                            |               |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | **Miscellaneous changes:**                                                                                               |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 441 <https://www.python.org/dev/peps/pep-0441/>`_ | improved Python zip application support         | In Progress   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 486 <https://www.python.org/dev/peps/pep-0486/>`_ | make the Python Laucher aware of virtual        | In Progress   |
   |                                                        | environments                                    |               |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 484 <https://www.python.org/dev/peps/pep-0484/>`_ | type hints (advisory only)                      | In Progress   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 488 <https://www.python.org/dev/peps/pep-0488/>`_ | elimination of PYO files(not relevant for uPy)  | In Progress   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+
   | `PEP 489 <https://www.python.org/dev/peps/pep-0489/>`_ | redesigning extension module loading            | In Progress   |
   +--------------------------------------------------------+-------------------------------------------------+---------------+

**********
Python 3.6
**********

Python 3.6 beta 1 was released on 12 Sep 2016, and a summary of the new features can be found here:

  
  +-----------------------------------------------------------------------------------------------------------+--------------+
  | **New Syntax Features:**                                                                                  | **Status**   |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 498 <https://www.python.org/dev/peps/pep-0498/>`_ | Literal String Formatting                        |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 515 <https://www.python.org/dev/peps/pep-0515/>`_ | Underscores in Numeric Literals                  |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 525 <https://www.python.org/dev/peps/pep-0525/>`_ | Asynchronous Generators                          |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 526 <https://www.python.org/dev/peps/pep-0526/>`_ | Syntax for Variable Annotations (provisional)    |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 530 <https://www.python.org/dev/peps/pep-0530/>`_ | Asynchronous Comprehensions                      |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | **New Built-in Features:**                                                                                               |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 468 <https://www.python.org/dev/peps/pep-0468/>`_ | Preserving the order of *kwargs* in a function   |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 487 <https://www.python.org/dev/peps/pep-0487/>`_ | Simpler customization of class creation          |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 520 <https://www.python.org/dev/peps/pep-0520/>`_ | Preserving Class Attribute Definition Order      |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | **Standard Library Changes:**                                                                                            |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 495 <https://www.python.org/dev/peps/pep-0495/>`_ | Local Time Disambiguation                        |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 506 <https://www.python.org/dev/peps/pep-0506/>`_ | Adding A Secrets Module To The Standard Library  |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 519 <https://www.python.org/dev/peps/pep-0519/>`_ | Adding a file system path protocol               |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | **CPython internals:**                                                                                                   |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 509 <https://www.python.org/dev/peps/pep-0509/>`_ | Add a private version to dict                    |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 523 <https://www.python.org/dev/peps/pep-0523/>`_ | Adding a frame evaluation API to CPython         |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 524 <https://www.python.org/dev/peps/pep-0524/>`_ | Make os.urandom() blocking on Linux              |              |
  |                                                        | (during system startup)                          |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 528 <https://www.python.org/dev/peps/pep-0528/>`_ | Change Windows console encoding to UTF-8         |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+
  | `PEP 529 <https://www.python.org/dev/peps/pep-0529/>`_ | Change Windows filesystem encoding to UTF-8      |              |
  +--------------------------------------------------------+--------------------------------------------------+--------------+

***********
Python 3.7
***********

New Features:

  +--------------------------------------------------------+--------------------------------------------------+----------------+
  |**Features**                                                                                               | Status         |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 538 <https://www.python.org/dev/peps/pep-0538/>`_ | Coercing the legacy C locale to a UTF-8 based    | Completed      | 
  |                                                        | locale                                           |                |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 539 <https://www.python.org/dev/peps/pep-0539/>`_ | A New C-API for Thread-Local Storage in CPython  | Won't Implement|
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 540 <https://www.python.org/dev/peps/pep-0540/>`_ | UTF-8 mode                                       | Completed      |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 552 <https://www.python.org/dev/peps/pep-0552/>`_ | Deterministic pyc                                | Not Relevant   |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 553 <https://www.python.org/dev/peps/pep-0553/>`_ | Built-in breakpoint()                            | In Progress    |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 557 <https://www.python.org/dev/peps/pep-0557/>`_ | Data Classes                                     | In Progress    |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 560 <https://www.python.org/dev/peps/pep-0560/>`_ | Core support for typing module and generic types | In Progress    |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 562 <https://www.python.org/dev/peps/pep-0562/>`_ | Module __getattr__ and __dir__                   | Completed      |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 563 <https://www.python.org/dev/peps/pep-0563/>`_ | Postponed Evaluation of Annotations              | In Progress    |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 564 <https://www.python.org/dev/peps/pep-0564/>`_ | Time functions with nanosecond resolution        | Completed      |
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 565 <https://www.python.org/dev/peps/pep-0565/>`_ | Show DeprecationWarning in __main__              | Won't Implement|
  +--------------------------------------------------------+--------------------------------------------------+----------------+
  | `PEP 567 <https://www.python.org/dev/peps/pep-0567/>`_ |  Context Variables                               | Won't Implement|
  +--------------------------------------------------------+--------------------------------------------------+----------------+


Other Language Changes:

  +----------------------------------------------------------------------------------------------------------+----------------+
  | async and await are now reserved keywords                                                                | Completed      |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | dict objects must preserve insertion-order                                                               | In Progress    |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | More than 255 arguments can now be passed to a function; a function can now have more than 255 parameters| Won't Implement|
  +----------------------------------------------------------------------------------------------------------+----------------+
  | bytes.fromhex() and bytearray.fromhex() now ignore all ASCII whitespace, not only spaces                 | In Progress    |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | str, bytes, and bytearray gained support for the new isascii() method, which can be used to test if a    | In Progress    |
  | string or bytes contain only the ASCII characters                                                        |                |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | ImportError now displays module name and module __file__ path whenfrom ... import ... fails              | Completed      |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | Circular imports involving absolute imports with binding a submodule to a name are now supported         | Completed      |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | object.__format__(x, '') is now equivalent to str(x) rather than format(str(self), '')                   | Completed      |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | In order to better support dynamic creation of stack traces, types.TracebackType can now be instantiated | In Progress    |
  | from Python code, and the tb_next attribute on tracebacks is now writable                                |                |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | When using the -m switch, sys.path[0] is now eagerly expanded to the full starting directory path, rather| Not Relevant   |
  | than being left as the empty directory (which allows imports from the current working directory at the   |                |
  | time when an import occurs)                                                                              |                |
  +----------------------------------------------------------------------------------------------------------+----------------+
  | The new -X importtime option or the PYTHONPROFILEIMPORTTIME environment variable can be used to show the | Not Relevant   | 
  | timing of each module import                                                                             |                |
  +----------------------------------------------------------------------------------------------------------+----------------+



Other Modules:

  +------------------------------------------------------------------------------------------------------------+----------------+
  | `asyncio <https://docs.python.org/3/whatsnew/3.7.html#asyncio>`_ asyncio (many, may need a separate ticket)| Completed      |
  +------------------------------------------------------------------------------------------------------------+----------------+
  | `gc <https://docs.python.org/3/whatsnew/3.7.html#gc>`_ New features include *gc.freeze()*,                 | Won't Implement| 
  | *gc.unfreeze()*, *gc-get_freeze_count*                                                                     |                |
  +------------------------------------------------------------------------------------------------------------+----------------+
  | `math <https://docs.python.org/3/whatsnew/3.7.html#math>`_ math.remainder() added to implement IEEE        | Completed      |
  | 754-style remainder                                                                                        |                |
  +------------------------------------------------------------------------------------------------------------+----------------+
  | `re <https://docs.python.org/3/whatsnew/3.7.html#re>`_ A number of tidy up features including better       | In Progress    |
  | support for splitting on empty strings and copy support for compiled expressions and match objects         |                |
  +------------------------------------------------------------------------------------------------------------+----------------+
  | `sys <https://docs.python.org/3/whatsnew/3.7.html#sys>`_ sys.breakpointhook() added.                       | In Progress    | 
  | sys.get(/set)_coroutine_origin_tracking_depth() added                                                      |                |
  +------------------------------------------------------------------------------------------------------------+----------------+
  | `time <https://docs.python.org/3/whatsnew/3.7.html#time>`_ Mostly updates to support nanosecond resolution |                | 
  | in PEP564, see above                                                                                       |                |  
  +------------------------------------------------------------------------------------------------------------+----------------+

**********
Python 3.8
**********

Python 3.8.0 (final) was released on the 14 October 2019. The Features for 3.8
are defined in `PEP 569 <https://www.python.org/dev/peps/pep-0569/#id9>`_ and
a detailed description of the changes can be found in What's New in `Python
3.8. <https://docs.python.org/3/whatsnew/3.8.html>`_

  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | **Features**                                                                                               | Status        |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | `PEP 570 <https://www.python.org/dev/peps/pep-0570/>`_ | Positional-only arguments                         |               |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | `PEP 572 <https://www.python.org/dev/peps/pep-0572/>`_ | Assignment Expressions                            |               |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | `PEP 574 <https://www.python.org/dev/peps/pep-0574/>`_ | Pickle protocol 5 with out-of-band data           |               |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | `PEP 578 <https://www.python.org/dev/peps/pep-0578/>`_ | Runtime audit hooks                               |               |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | `PEP 587 <https://www.python.org/dev/peps/pep-0587/>`_ | Python Initialization Configuration               |               |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | `PEP 590 <https://www.python.org/dev/peps/pep-0590/>`_ | Vectorcall: a fast calling protocol for CPython   |               |
  +--------------------------------------------------------+---------------------------------------------------+---------------+
  | **Miscellaneous**                                                                                                          |
  +----------------------------------------------------------------------------------------------------------------------------+
  |  f-strings support = for self-documenting expressions and debugging                                                        |
  +----------------------------------------------------------------------------------------------------------------------------+

Other Language Changes
----------------------

  +------------------------------------------------------------------------------------------------------------+-------------+
  | A *continue* statement was illegal in the *finally* clause due to a problem with the implementation. In    | Completed   |  
  | Python 3.8 this restriction was lifted                                                                     |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | The *bool*, *int* , and *fractions.Fraction* types now have an *as_integer_ratio()* method like that found | In Progress |
  | in *float* and *decimal.Decimal*                                                                           |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Constructors of *int*, *float* and *complex* will now use the *__index__()* special method, if available   | In Progress | 
  | and the corresponding method *__int__()*, *__float__()* or *__complex__()* is not available                |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added support of *\N{name}* escapes in regular expressions                                                 | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Dict and dictviews are now iterable in reversed insertion order using *reversed()*                         | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | The syntax allowed for keyword names in function calls was further restricted. In particular,              | In Progress |  
  | f((keyword)=arg) is no longer allowed                                                                      |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Generalized iterable unpacking in yield and return statements no longer requires enclosing parentheses     | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | When a comma is missed in code such as [(10, 20) (30, 40)], the compiler displays a SyntaxWarning with a   | In Progress | 
  | helpful suggestion                                                                                         |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Arithmetic operations between subclasses of *datetime.date* or *datetime.datetime* and *datetime.timedelta*| In Progress |
  | objects now return an instance of the subclass, rather than the base class                                 |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | When the Python interpreter is interrupted by *Ctrl-C (SIGINT)* and the resulting *KeyboardInterrupt*      | In Progress |
  | exception is not caught, the Python process now exits via a SIGINT signal or with the correct exit code    |             |
  | such that the calling process can detect that it died due to  a *Ctrl-C*                                   |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Some advanced styles of programming require updating the *types.CodeType* object for an existing function  | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | For integers, the three-argument form of the pow() function now permits the exponent to be negative in the | In Progress |
  | case where the base is relatively prime to the modulus                                                     |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Dict comprehensions have been synced-up with dict literals so that the key is computed first and the value | In Progress | 
  | second                                                                                                     |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | The *object.__reduce__()* method can now return a tuple from two to six elements long                      | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+

Following are the changes to MicroPython built-in modules:

  +------------------------------------------------------------------------------------------------------------+-------------+
  | `asyncio`                                                                                                                |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | *asyncio.run()* has graduated from the provisional to stable API                                           | Completed   |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Running *python -m asyncio* launches a natively async REPL                                                 | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | The exception *asyncio.CancelledError* now inherits from *BaseException* rather than *Exception* and no    | Completed   | 
  | longer inherits from *concurrent.futures.CancelledError*                                                   |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added *asyncio.Task.get_coro()* for getting the wrapped coroutine within an *asyncio.Task*                 | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Asyncio tasks can now be named, either by passing the name keyword argument to *asyncio.create_task()* or  | In Progress |  
  | the *create_task()* event loop method, or by calling the *set_name()* method on the task object            |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added support for Happy Eyeballs to *asyncio.loop.create_connection()*. To specify the behavior, two new   | In Progress |
  | parameters have been added: *happy_eyeballs_delay* and interleave.                                         |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | `gc`                                                                                                                     |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | *get_objects()* can now receive an optional generation parameter indicating a generation to get objects    | Completed   |
  | from. (Note, though, that while *gc* is a built-in, *get_objects()* is not implemented for MicroPython)    |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | `math`                                                                                                                   |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added new function *math.dist()* for computing Euclidean distance between two points                       | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Expanded the *math.hypot()* function to handle multiple dimensions                                         | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added new function, *math.prod()*, as analogous function to *sum()* that returns the product of a ‘start’  | In Progress | 
  | value (default: 1) times an iterable of numbers                                                            |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added two new combinatoric functions *math.perm()* and *math.comb()*                                       | In Progress |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Added a new function *math.isqrt()* for computing accurate integer square roots without conversion to      | In Progress |
  | floating point                                                                                             |             |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | The function *math.factorial()* no longer accepts arguments that are not int-like                          | Completed   |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | `sys`                                                                                                                    |
  +------------------------------------------------------------------------------------------------------------+-------------+
  | Add new *sys.unraisablehook()* function which can be overridden to control how “unraisable exceptions”     | In Progress |
  | are handled                                                                                                |             |
  +------------------------------------------------------------------------------------------------------------+-------------+


  

  


.. toctree::
    :maxdepth: 2

